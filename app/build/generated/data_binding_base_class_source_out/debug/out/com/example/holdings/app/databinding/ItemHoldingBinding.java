// Generated by view binder compiler. Do not edit!
package com.example.holdings.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.holdings.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemHoldingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView tvAvgPrice;

  @NonNull
  public final TextView tvLtp;

  @NonNull
  public final TextView tvPnl;

  @NonNull
  public final TextView tvQuantity;

  @NonNull
  public final TextView tvSymbol;

  private ItemHoldingBinding(@NonNull ConstraintLayout rootView, @NonNull TextView tvAvgPrice,
      @NonNull TextView tvLtp, @NonNull TextView tvPnl, @NonNull TextView tvQuantity,
      @NonNull TextView tvSymbol) {
    this.rootView = rootView;
    this.tvAvgPrice = tvAvgPrice;
    this.tvLtp = tvLtp;
    this.tvPnl = tvPnl;
    this.tvQuantity = tvQuantity;
    this.tvSymbol = tvSymbol;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemHoldingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemHoldingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_holding, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemHoldingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tvAvgPrice;
      TextView tvAvgPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvAvgPrice == null) {
        break missingId;
      }

      id = R.id.tvLtp;
      TextView tvLtp = ViewBindings.findChildViewById(rootView, id);
      if (tvLtp == null) {
        break missingId;
      }

      id = R.id.tvPnl;
      TextView tvPnl = ViewBindings.findChildViewById(rootView, id);
      if (tvPnl == null) {
        break missingId;
      }

      id = R.id.tvQuantity;
      TextView tvQuantity = ViewBindings.findChildViewById(rootView, id);
      if (tvQuantity == null) {
        break missingId;
      }

      id = R.id.tvSymbol;
      TextView tvSymbol = ViewBindings.findChildViewById(rootView, id);
      if (tvSymbol == null) {
        break missingId;
      }

      return new ItemHoldingBinding((ConstraintLayout) rootView, tvAvgPrice, tvLtp, tvPnl,
          tvQuantity, tvSymbol);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
